# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Note: This workflow uses the latest stable version of the Flutter SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/flutter-actions/setup-flutter/blob/main/.github/workflows/flutter-linux.yml
      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v4
        with:
          channel: stable
          version: 3.29.0

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze --no-fatal-infos

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: flutter test
        
      # Generate documentation
      - name: Generate documentation
        run: dart doc

      # Upload documentation as an artifact
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: dartdoc
          path: doc/api

      # Check for documentation changes
      - name: Check for documentation changes
        id: check_changes
        run: |
          if git diff --quiet docs/; then
            echo "No changes in documentation."
            echo "::set-output name=changed::false"
          else
            echo "Documentation has changed."
            echo "::set-output name=changed::true"
          fi

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: steps.check_changes.outputs.changed == 'true' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          mkdir -p docs
          rsync -av --delete doc/api/ docs/
          touch docs/.nojekyll
          git add docs
          git commit -m "Deploy Dart documentation"
          git push origin main
          